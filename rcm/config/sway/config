# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
#set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu rofi -theme Arc-Dark -combi-modi "drun,run" -show combi | xargs swaymsg exec --
# Lock screen
set $lock 'swaylock -f -c 000000 -i ~/Pictures/wallpapers/lock.jpg -s fill -l'

# variables for monitors
set $monitor_left eDP-1
set $monitor_right DP-6

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg ~/Pictures/wallpapers/uplay_wallpaper.jpg fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
output $monitor_left pos 0 0
output $monitor_right pos 1920 0

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
    timeout 300 $lock \
    timeout 360 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
    before-sleep $lock
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 60 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input * {
      xkb_layout us,cz(qwerty)
      xkb_options "grp:alt_space_toggle"
}

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

    # Lock screen
    bindsym $mod+Control+l exec $lock
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#

    set $ws_web 1:web
    set $ws_code 2:code
    set $ws_term 3:term
    set $ws_work 4:work
    set $ws_music 5:music
    set $ws_urgent 6:urgent
    set $ws_focus 7:focus

    workspace $ws_web output $monitor_right
    workspace $ws_code output $monitor_right
    workspace $ws_term output $monitor_right
    workspace $ws_work output $monitor_left
    workspace $ws_music output $monitor_left
    workspace $ws_urgent output $monitor_right
    workspace $ws_focused output $monitor_right

    # Switch to workspace
    bindsym $mod+1 workspace $ws_web
    bindsym $mod+2 workspace $ws_code
    bindsym $mod+3 workspace $ws_term
    bindsym $mod+4 workspace $ws_work
    bindsym $mod+5 workspace $ws_music
    bindsym $mod+6 workspace $ws_urgent
    bindsym $mod+7 workspace $ws_focus
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 0
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace $ws_web
    bindsym $mod+Shift+2 move container to workspace $ws_code
    bindsym $mod+Shift+3 move container to workspace $ws_term
    bindsym $mod+Shift+4 move container to workspace $ws_work
    bindsym $mod+Shift+5 move container to workspace $ws_music
    bindsym $mod+Shift+6 move container to workspace $ws_urgent
    bindsym $mod+Shift+7 move container to workspace $ws_focus
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 0
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

#
# Special keys:
#
    bindsym XF86AudioRaiseVolume exec amixer set Master 5%+
    bindsym XF86AudioLowerVolume exec amixer set Master 5%-
    bindsym XF86AudioMute exec amixer set Master +1 toggle
    bindsym XF86AudioPlay exec playerctl -a play-pause

    bindsym XF86MonBrightnessDown exec brightnessctl set 10%- --device='*'
    bindsym XF86MonBrightnessUp exec brightnessctl set 10%+ --device='*'

#
# Default behavior
#
workspace_auto_back_and_forth yes

# FIXME: don' work yet
# You can also use any non-zero value if you'd like to have a border
for_window [class=".*"] border pixel 0
gaps inner 5
smart_gaps on

#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Launch mode
#
mode "launch" {
    bindsym f exec firefox
    bindsym m exec flatpak run org.mozilla.Thunderbird
    bindsym e exec emacs
    bindsym t exec flatpak run org.telegram.desktop
    bindsym i exec flatpak run io.github.Hexchat
    bindsym p exec flatpak run com.tutanota.Tutanota
    bindsym s exec flatpak run com.spotify.Client

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+x mode "launch"

#
# Status Bar:
#
# Using Waybar instead of default swaybar.
bar {
    swaybar_command waybar
}

#
# Autostart applications
#
exec flatpak run com.nextcloud.desktopclient.nextcloud

include /etc/sway/config.d/*
